version: 2.1
orbs:
  go: gotest/tools@0.0.13

executors:
  golang:
    docker:
      - image: cimg/go:1.16
    resource_class: 2xlarge

commands:
  save-cache:
    description: Save the go mod & build cache.
    steps:
      - save_cache:
          key: >-
            v3-gosrc-{{ .Branch }}-{{ checksum "go.sum" }}-{{
            .Environment.CIRCLE_JOB }}
          name: Saving Source Cache
          paths:
            - /home/circleci/go/pkg/mod
      - save_cache:
          key: >-
            v3-gobin-{{ arch }}-{{ .Branch }}-{{ checksum "go.sum" }}-{{
            .Environment.CIRCLE_JOB }}
          name: Saving Build Cache
          paths:
            - /home/circleci/go/cache
  restore-cache:
    description: Restore the go mod & build cache.
    steps:
      - restore_cache:
          keys:
            - >-
              v3-gosrc-{{ .Branch }}-{{ checksum "go.sum" }}-{{
              .Environment.CIRCLE_JOB }}
            - 'v3-gosrc-{{ .Branch }}-{{ checksum "go.sum" }}-'
            - 'v3-gosrc-{{ .Branch }}-'
            - v3-gosrc-master-
          name: Restoring Source Cache
      - restore_cache:
          keys:
            - >-
              v3-gobin-{{ arch }}-{{ .Branch }}-{{ checksum "go.sum" }}-{{
              .Environment.CIRCLE_JOB }}
            - 'v3-gobin-{{ arch }}-{{ .Branch }}-{{ checksum "go.sum" }}-'
            - 'v3-gobin-{{ arch }}-{{ .Branch }}-'
            - 'v3-gobin-{{ arch }}-master-'
          name: Restoring Build Cache
  checkout-dealbot:
    steps:
      - checkout
  setup-machine:
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install ocl-icd-opencl-dev libhwloc-dev
  build-lotus:
    steps:
      - run: git clone --depth=1 https://github.com/filecoin-project/lotus /tmp/lotus
      - run: cd /tmp/lotus && git submodule update --init --depth=1
      - run: cd /tmp/lotus && make debug
  build-dealbot:
    steps:
      - run: go install ./...
  install-lotus:
    steps:
      - run: cd /tmp/lotus && sudo cp lotus /usr/local/bin
      - run: cd /tmp/lotus && sudo cp lotus-miner /usr/local/bin
      - run: cd /tmp/lotus && sudo cp lotus-worker /usr/local/bin
      - run: cd /tmp/lotus && sudo cp lotus-seed /usr/local/bin
  test-integration-dealbot:
    steps:
      - run: 
          command: |
            circleci tests glob "./integration_tests/[0-9]*.sh" | circleci tests split | xargs -n 1 /bin/bash
  docker-login:
    steps:
      - run:
          command: echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  build:
    executor: golang
    steps:
      - checkout-dealbot
      - setup-machine
      - build-lotus
      - build-dealbot
      - persist_to_workspace:
          root: /tmp/lotus
          paths:
            - lotus
            - lotus-seed
            - lotus-worker
            - lotus-miner
      - save-cache
  test:
    executor: golang
    steps:
      - checkout-dealbot
      - setup-machine
      - attach_workspace:
          at: /tmp/lotus
      - install-lotus
      - restore-cache
      - test-integration-dealbot
    parallelism: 3
  build-push:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout-dealbot
      - docker-login
      - run:
          name: docker build
          command: |
            DOCKER_REPO=filecoin/dealbot
            DOCKER_TAG=$CIRCLE_SHA1
            echo "export DOCKER_REPO=$DOCKER_REPO" >> $BASH_ENV
            echo "export DOCKER_TAG=$DOCKER_TAG" >> $BASH_ENV
            docker build -t "${DOCKER_REPO}:${DOCKER_TAG}" .
            docker push "${DOCKER_REPO}:${DOCKER_TAG}"
  deploy-lotusinfra:
    docker:
      - image: cimg/base:2021.04
    parameters:
      namespace:
        type: string
      release:
        type: string
      circle_context:
        type: string
      kubernetes_cluster:
        type: string
      aws_region:
        type: string
    steps:
      - run:
          name: submit deploy job
          command: |
            curl --request POST \
            --url https://circleci.com/api/v2/project/gh/filecoin-project/lotus-infra/pipeline \
            --header "Circle-Token: $CIRCLE_TOKEN" \
            --header "content-type: application/json" \
            --data "{
              \"parameters\":{
                \"api_workflow_requested\": \"helm-deploy\",
                \"circle_context\": \"<< parameters.circle_context >>\",
                \"kubernetes_cluster\": \"<< parameters.kubernetes_cluster >>\",
                \"aws_region\": \"<< parameters.aws_region >>\",
                \"namespace\": \"<< parameters.namespace >>\",
                \"release\": \"<< parameters.release >>\",
                \"chart\": \"filecoin/dealbot\",
                \"chart_version\": \"0.0.6\",
                \"override_repository\": \"filecoin/dealbot\",
                \"override_tag\": \"$CIRCLE_SHA1\"
              }}"


workflows:
  version: 2.1
  ci:
    jobs:
      - build:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - build-push:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - deploy-lotusinfra:
          name: deploy-nerpanet
          circle_context: sentinel-staging-deploy
          kubernetes_cluster: mainnet-us-east-2-dev-eks
          aws_region: us-east-2
          namespace: ntwk-nerpanet-dealbot
          release: dealbot-0
          requires:
            - build-push
          filters:
            branches:
              only:
                - main
      - deploy-lotusinfra:
          name: deploy-mainnet-us-east-1
          circle_context: filecoin-mainnet-aws
          kubernetes_cluster: mainnet-us-east-1-eks
          aws_region: us-east-1
          namespace: ntwk-mainnet-dealbot
          release: dealbot-0
          requires:
            - build-push
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
