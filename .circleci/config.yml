version: 2.1
orbs:
  go: gotest/tools@0.0.13

executors:
  golang-with-postgres:
    docker:
      - image: cimg/go:1.17
      - image: circleci/postgres:9.6.2-alpine
    resource_class: 2xlarge

commands:
  checkout-dealbot:
    steps:
      - checkout
  install-lotus:
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install ocl-icd-opencl-dev libhwloc-dev
      - run: git clone -b v1.13.0 --depth=1 https://github.com/filecoin-project/lotus /tmp/lotus
      - run: cd /tmp/lotus && git submodule update --init --depth=1
      - run: cd /tmp/lotus && make debug && sudo make install
      - run: cd /tmp/lotus && sudo cp lotus-seed /usr/local/bin
  test-integration-dealbot:
    steps:
      - run: ./integration_tests/01_storage_retrieval_ok.sh
      - run: ./integration_tests/02_controller_daemon.sh
  docker-login:
    steps:
      - run:
          command: echo $DOCKERHUB_PASS | docker login --username $DOCKERHUB_USER --password-stdin
  download-params:
    steps:
      - restore_cache:
          name: Restore parameters cache
          keys:
            - 'v28-2kb-lotus-params'
          paths:
            - /var/tmp/filecoin-proof-parameters/
      - run:  lotus fetch-params 2048
      - save_cache:
          name: Save parameters cache
          key: 'v28-2kb-lotus-params'
          paths:
            - /var/tmp/filecoin-proof-parameters/

jobs:
  build-and-test:
    executor: golang-with-postgres
    environment:
      PGHOST: 127.0.0.1
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: ""
      PGDATABASE: circle_test
      PGSSLMODE: disable
    steps:
      - run:
          name: install dockerize
          command: curl -LO https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: wait for database
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - checkout-dealbot
      - install-lotus
      - download-params
      - test-integration-dealbot
  build-push:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout-dealbot
      - docker-login
      - run:
          name: docker build
          command: |
            DOCKER_REPO=filecoin/dealbot
            DOCKER_TAG=$CIRCLE_SHA1
            echo "export DOCKER_REPO=$DOCKER_REPO" >> $BASH_ENV
            echo "export DOCKER_TAG=$DOCKER_TAG" >> $BASH_ENV
            docker build -t "${DOCKER_REPO}:${DOCKER_TAG}" .
            docker push "${DOCKER_REPO}:${DOCKER_TAG}"
  deploy-lotusinfra:
    docker:
      - image: cimg/base:2021.04
    parameters:
      chart:
        type: string
      chart_version:
        type: string
      namespace:
        type: string
      release:
        type: string
      circle_context:
        type: string
      kubernetes_cluster:
        type: string
      aws_region:
        type: string
    steps:
      - run:
          name: submit deploy job
          command: |
            curl --request POST \
            --url https://circleci.com/api/v2/project/gh/filecoin-project/lotus-infra/pipeline \
            --header "Circle-Token: $CIRCLE_TOKEN" \
            --header "content-type: application/json" \
            --data "{
              \"parameters\":{
                \"api_workflow_requested\": \"helm-deploy\",
                \"circle_context\": \"<< parameters.circle_context >>\",
                \"kubernetes_cluster\": \"<< parameters.kubernetes_cluster >>\",
                \"aws_region\": \"<< parameters.aws_region >>\",
                \"namespace\": \"<< parameters.namespace >>\",
                \"release\": \"<< parameters.release >>\",
                \"chart\": \"<< parameters.chart >>\",
                \"chart_version\": \"<< parameters.chart_version >>\",
                \"override_repository\": \"filecoin/dealbot\",
                \"override_tag\": \"$CIRCLE_SHA1\"
              }}"


workflows:
  version: 2.1
  ci:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - build-push:
          requires:
            - build-and-test
          context:
            - filecoin-dockerhub-publish
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - deploy-lotusinfra:
          name: deploy-nerpanet-controller
          chart: filecoin/dealbot
          chart_version: 0.0.14
          circle_context: sentinel-staging-deploy
          kubernetes_cluster: mainnet-us-east-2-dev-eks
          aws_region: us-east-2
          namespace: ntwk-nerpanet-dealbot
          release: dealbot-0
          requires:
            - build-push
          filters:
            branches:
              only:
                - main
      - deploy-lotusinfra:
          name: deploy-mainnet-controller
          chart: filecoin/dealbot
          chart_version: 0.0.14
          circle_context: filecoin-mainnet-aws
          kubernetes_cluster: mainnet-us-east-1-eks
          aws_region: us-east-1
          namespace: ntwk-mainnet-dealbot
          release: dealbot-0
          requires:
            - build-push
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
